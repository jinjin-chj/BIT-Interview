1. 클로져란 무엇인가?
- 자바스크립트 개념(9강)
- 클로저(Closure): 내부함수가 외부함수의 지역변수에 접근할 수 있고, 
외부함수는 외부함수의 지역변수를 사용하는 내부함수가 소멸될 때 까지 소멸되지 않는 특성을 의미한다.
- 반환된 함수의 life-cycle가 종료될 때 까지 호출된 함수의 life-cycle이 유지되는 것.
- 함수문 내에서 또 다른 함수를 호출하고 사용하는 것. 
 (대개 함수 내에서 정의한 함수를 리턴하지만, 사용은 바깥에서 한다.)

- 예시)
function getClosure() {
  var text = 'variable 1';
  return function() {
    return text;
  };
}

var closure = getClosure();
console.log(closure()); // 결과값: 'variable 1'

=> 위에서 정의한 getClosure()는 함수를 반환하고, 
반환된 함수는 getClosure() 내부에서 선언된 변수를 참조하고 있다. 
또한 이렇게 참조된 변수는 함수 실행이 끝났다고 해서 사라지지 않았고, 
여전히 제대로 된 값을 반환하고 있는 걸 알 수 있다.


2. js를 이용하여, 구구단중 홀수단만 나오게 하시오.
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
</head>
<body>
	<script type="text/javascript">
		for(var i=2; i<10; i++) {
			if (i % 2 != 0) {
				document.write('< '+i+'단 >' + '<br>');
				for(var j=1; j<10; j++) {
					document.write(i + '*' + j +'=' +(i*j) + '<br>');
				} 
			}
		}		
	</script>
</body>
</html>


3. 부서별로 sal의 최소 값을 구하는데, 30번 부서의 sal 최소값 보다 큰것을 구하시오. 
select deptno, min(sal) from emp where (sal > (select min(sal) from emp where deptno= 30)) group by deptno;


4. 삼각형 및 사각형의 넓이를 구하는 프로그래밍을 IoC 컨테이너를 이용하여 프로그래밍 하시오.

=====<MainClass.java>=====================
package edu.bit.ex;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;

public class MainClass {

	public static void main(String[] args) {
		String configLocation = "classpath:area.xml";
		AbstractApplicationContext ctx = new GenericXmlApplicationContext(configLocation);
		AreaInfo area = ctx.getBean("areaInfo", AreaInfo.class);
		area.getInfo();
		ctx.close();

	}

}


=====<AreaInfo.java>===================
package edu.bit.ex;

public class AreaInfo {

	private int width, height;
	private double recArea, triArea;

	public void getInfo() {
		this.recArea = width * height;
		this.triArea = width * height * 0.5;

		System.out.println("가로, 세로의 길이가 " + width + ", " + height + "인 사각형의 넓이는 : " + getRecArea());
		System.out.println("밑변, 높이가 " + width + ", " + height + "인 삼각형의 넓이는 : " + getTriArea());

	}

	public int getWidth() {
		return width;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	public int getHeight() {
		return height;
	}

	public void setHeight(int height) {
		this.height = height;
	}

	public double getRecArea() {
		return recArea;
	}

	public void setRecArea(double recArea) {
		this.recArea = recArea;
	}

	public double getTriArea() {
		return triArea;
	}

	public void setTriArea(double triArea) {
		this.triArea = triArea;
	}

}

=====<area.xml>=======================

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<bean id="areaInfo" class="edu.bit.ex.AreaInfo">
		<property name="width">
			<value>5</value>
		</property>
		<property name="height">
			<value>4</value>
		</property>
	</bean>
</beans>

=====<결과>===========================
가로, 세로의 길이가 5, 4인 사각형의 넓이는 : 20.0
밑변, 높이가 5, 4인 삼각형의 넓이는 : 10.0







