#8강 ~ 9강

1.set classpath 에 대하여 설명하시오.
- 경로를 지정한다.


2.절대경로와 상대경로에 대하여 설명하시오.
- 절대 경로: 가장 최상위 위치인 루트 디렉토리(C:)로 시작하는 경로
- 상대 경로: 현재 디렉토리(실행중인 프로그램의 작업 디렉)를 기준으로 지정한 경로


3. . 과 .. 의 차이는? (터미널,cmd같은데서..)
- . : 현재 디렉토리로 넘어감
- .. : 이전 디렉토리로 넘어감


4.package의 용도는?
- 공간적, 접근적 충돌 해결을 위함 (패키지 선언으로 해결 가능)
  ㄴ공간적 구분: 서로 다른 패키지의 두 클래스 파일은 저장되는 위치가 다르다.
  ㄴ접근 방법의 구분: 서로 다른 패키지의 두 클래스는 인스턴스 변수 생성 시 사용하는 이름이 다르다.
- 원래는 한 패키지 내에서 똑같은 클래스명(Circle.java)은 중복 불가
- 패키지 생성하면 클래스(파일.java) 같은 이름 가능


5.package 의 기본적인 명명법(이름짓는법)은?
- 인터넷 도메인 역순으로.
예: 회사 이름으로 구분짓겠다! (www.oracle.com)
package com.oracle.teamname;
-> package com.회사명.주체 또는 팀이름;


6.정보은닉에 대하여 설명하시오.
- information hiding (hidden infomation)
- OOP(객체 지향 언어)의 가장 큰 특성 중 하나.
- 접근제어자(access modifier) 4종류 중, private 키워드를 활용해서 
  외부에서 클래스 내부의 정보에 다이렉트로 접근하지 못하도록 하는 기능.


7.접근제한자 4가지 종류에 대하여 설명하시오.
- 접근제한자(접근제어자) : Access Modifier
- 접근 수준의 크기에 따라; 
  public > protected > default > private
- 클래스 내 모든 것에 붙일 수 있다.( 클래스, 변수, 함수 ...)
- 일반적인 인스턴스 변수 앞에는 private 붙여주기.


8.class 에서 붙일수 있는 접근 제한자 2개를 설명하고, 해당 접근제한자의 사용 목적은?
(1) class 앞에 붙을 수 있는 접근제한자 2개 (cf. 변수 및 함수는 4개 모두 가능)
- public: public class Money{ } 
- default: class Money, int a, String name,,, 처럼 앞에 아무것도 없어 보이는게 디폴트!!    
(2) public: 어디서든 인스턴스 생성이 가능. 다른 패키지 내에 있는 클래스에서도 객체 생성 가능.
    default: 동일 패키지로 묶인 클래스 내에서만 인스턴스 생성 가능.


9.가위, 바위, 보 게임 작성하시오.
import java.util.Scanner;

public class Test {

	public static void main(String[] args) {
		// 가위 바위 보 게임
		Scanner scanner = null;
		System.out.println("~ 게임을 시작하지 ~");

		while (true) {
			scanner = new Scanner(System.in);
			System.out.println();
			System.out.println("1.가위 / 2.바위 /3.보 입력하세요.");

			int comNum = (int) (Math.random() * 3) + 1;
			int myNum = scanner.nextInt();

			System.out.print("컴퓨터가 ");
			if (comNum == 1) {
				System.out.print("가위");
			} else if (comNum == 2) {
				System.out.print("바위");
			} else {
				System.out.print("보");
			}
			System.out.println("를 냈습니다.");

			System.out.print("사용자가 ");
			if (myNum == 1) {
				System.out.print("가위");
			} else if (myNum == 2) {
				System.out.print("바위");
			} else {
				System.out.print("보");

			}
			System.out.println("를 냈습니다.");
			System.out.println();

			if ((comNum == 1 && myNum == 2) || (comNum == 2 && myNum == 3) || (comNum == 3 && myNum == 1)) {
				System.out.println("이겼습니다.");
			} else if (comNum == myNum) {
				System.out.println("비겼습니다.");
			} else {
				System.out.println("졌습니다.");
			}

			System.out.println(">> 계속 하시겠습니까? (Y / N)");
			char anwser = scanner.next().charAt(0);
			if (anwser == 'y' || anwser == 'Y')
				continue;
			else
				break;
		}
		scanner.close();
		System.out.println("~ 게임 종료 ~");
	}

}


10.아래와 같이 계산기 프로그램을 작성하시오. // 했는데 에러남~.~
==================================
10 + 9   // 입력을 한칸씩 띄우도록 할것
10 + 9 = 19
계속하시겠습니까?
10 - 7
10 - 7 = 3
계속하시겠습니까?

<.클래스>
public class Calculator {

	private int num1;
	private String ch;
	private int num2;
	double result = 0;

	public Calculator(int num1, String ch, int num2) {
		this.num1 = num1;
		this.ch = ch;
		this.num2 = num2;
	}

	public void result() {
		if (ch == "+") {
			result = (num1 + num2);
			System.out.print(num1 + " + " + num2 + " = " + result);
		} else if (ch == "-") {
			result = (num1 - num2);
			System.out.print(num1 + " - " + num2 + " = " + result);
		} else if (ch == "*") {
			result = (num1 * num2);
			System.out.print(num1 + " * " + num2 + " = " + result);
		} else if (ch == "/") {
			result = (num1 / num2);
			System.out.print(num1 + " / " + num2 + " = " + result);
		} else if ((ch == "/") && (num1 == 0 || num2 == 0)) {
			System.out.println("0으로 나눌 수 없습니다.");
		}

	}

}

<메인>
import java.util.Scanner;

public class CalculatorMain {
	public static void main(String[] args) {
		Scanner scanner = null;

		while (true) {
			System.out.println("계산기 시작");
			scanner = new Scanner(System.in);

			int num1 = scanner.nextInt();
			String ch = scanner.nextLine();
			int num2 = scanner.nextInt();

			Calculator cal = new Calculator(num1, ch, num2);
			cal.result();
			System.out.println(cal.result);

			System.out.println("계속 하시겠습니까?");

			char anwser = scanner.next().charAt(0);
			if (anwser == 'Y' || anwser == 'y')
				continue;
			else
				break;
		}
		scanner.close();
		System.out.println("프로그램 종료.");
	}

}

<출력> 사칙연산 입력하면 에러남,,
계산기 시작
10
9
0.0
계속 하시겠습니까?
n
프로그램 종료.


