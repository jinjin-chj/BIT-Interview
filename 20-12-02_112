#7강

1.생성자란 무엇인가?
생성자 함수? Constructor
Grade grade = new Grade(); 에서 new 뒤 Grade();가 생성자 함수
특징1: 생성자는 값을 반환하지 않고 반환형(=리턴타입:void, int 등)을 표시하지 않는다.
        즉, return;(리턴값)또한 필요 없음
특징2: 생성자의 이름은 클래스명과 동일하다.
특징3: 초기화를 위한 생성자로 용도가 제한되어있다.


2.디폴트 생성자란 무엇인가?
- .class를 안 만들었는데 생성자 함수 호출(사용)했을 때 에러가 안나는 경우는,
컴파일러가 자동으로 디폴트 생성자를 삽입한 경우. 
- 인자가 하나도 없는 생성자. = 내용이 하나도 없는 생성자.. 그냥,, 클래스명() {}
- 모든 클래스의 인스턴스 생성은 생성자 호출(써먹기)를 동반한다. 


3.생성자의 용도에 대하여 설명하시오.
- 값들에 대한 "초기화"를 위한 용도로 제한되어 있음. 연산X

(추가)
연산이 아닌 인스턴스 변수의 초기화 용도로 사용.

예:
public BankAccount(String acc, String ss, int bla);
accNumber = acc;
ssNumber =ss;
balance = bal;  // 필드 초기화


4.null 에 대하여 설명하시오.
BankAccount ref = null; 인 경우 참조 변수(ref)를 초기화 시킴.
즉, 참조 변수 안에 null을 집어 넣으면 ref 방이 참조하는 인스턴스(1000번지 집)와의 관계를 끊음.
(참조형 변수 ref에는 첫번째 번지수 1000번지가 들어감. 1000~1020있더라도.)

(추가)
- 참조 변수를 null로 초기화하는 것은 "null 체크"라고 함.
- 참조 변수를 함수의 매개 변수로 사용할 때는, 반드시 null 체크 해야 함.


5.금일 프로그래밍 했던 문제 (가.~ 라.) 
// getset함수는 있어도 없어도 작동하는데 있는게 좋다. 몇개는 생략함.

가. ========================================
자바 클래스를 작성하는 연습을 해보자. 
다음 main() 메소드를 실행하였을 때 예시와 같이 출력되도록 TV 클래스를 작성하라.

public static void main(String[] args) {
   TV myTV = new TV("LG", 2017, 32); //LG에서 만든 2017년 32인치
   myTV.show();
}
LG에서 만든 2017년형 32인치 TV

<.클래스>
public class Test {
	String brand;
	int year;
	int inch;
	
	public String getBrand() {
		return brand;
	}
	public void setBrand(String brand) {
		this.brand = brand;
	}
	public int getYear() {
		return year;
	}
	public void setYear(int year) {
		this.year = year;
	}
	public int getInch() {
		return inch;
	}
	public void setInch(int inch) {
		this.inch = inch;
	}

	public Test(String brand, int year, int inch) {
		this.brand = brand;
		this.year = year;
		this.inch = inch;
	}
	
	public void show() {
		System.out.println(brand + "에서 만든 " + year + 
				"년형 " + inch + "인치 TV");
	}
}

<메인>
public class TestMain {

	public static void main(String[] args) {
	//LG에서 만든 2017년형 32인치 TV
		Test myTV = new Test("LG", 2017, 32); 
		myTV.show();
	}

}

<출력>
LG에서 만든 2017년형 32인치 TV

나. ==========================================
		int math, science, english;
		math = 90;
		science = 100; 
		english = 80;
		
		Grade me = new Grade(math, science, english);
		System.out.println("평균은 " + me.average());
        
<.클래스>
public class Test {

	int math;
	int science; 
	int english;
	
	public Test(int math, int science, int english) {
		this.math = math;
		this.science = science;
		this.english = english;
	}
	
	public double average() {
		return (math + science + english) / 3.0;
	}
}

<메인>
public class TestMain {

	public static void main(String[] args) {
	//
		Test me = new Test(90,100,80); 
			System.out.println("평균은 " + me.average());			
	}

}

<출력>
평균은 90.0

다. ============================================
노래 한 곡을 나타내는 Song 클래스를 작성하라. Song은 다음 필드로 구성된다.

- 노래의 제목을 나타내는 title
- 가수를 나타내는 artist
- 노래가 발표된 연도를 나타내는 year
- 국적을 나타내는 country

또한 Song 클래스에 다음 생성자와 메소드를 작성하라.
- 생성자 2개: 기본 생성자와 매개변수로 모든 필드를 초기화하는 생성자
- 노래 정보를 출력하는 show() 메소드
- main() 메소드에서는 1978년, 스웨덴 국적의 ABBA가 부른 "Dancing Queen"을
song 객체로 생성하고 show()를 이용하여 노래의 정보를 다음과 같이 출력하라.

<.클래스>
public class Test {
	
	String title;
	String artist;
	String country;
	int year;
	
	Test() {	
	}
	
	public Test(String title, String artist, 
			String country,int year) {
		
		this.title = title;
		this.artist = artist;
		this.country = country;
		this.year = year;
	}
	
	public void show() {
		System.out.println(year + "년 "+ country+" 국적의 " 
				+artist +"가 부른 "+ title);
	}
	
}
<메인>
public class TestMain {
	public static void main(String[] args) {
		Test song = new Test("Dancing Queen", "ABBA", "스웨덴", 1978);
		song.show();			
	}
}
<출력>
1978년 스웨덴 국적의 ABBA가 부른 Dancing Queen

라. ===============================================
아래와 같이 성적을 연속적으로 입력 받고 평균을 내는  프로그램을 작성하시오.

국어 영어 수학을 입력하세요!
100 60 70
평균은 76.66666666666667
계속 하시겠습니까
y
국어 영어 수학을 입력하세요!
90 80 70
평균은 80.0
계속 하시겠습니까
n
프로그램 종료 입니다.

<.클래스>

public class Test {
	int kor;
	int eng;
	int math;

	public Test(int kor, int eng, int math) {
		this.math = math;
		this.eng = eng;
		this.kor = kor;
	}

	public double avg() {
		return (math + eng + kor) / 3.0;
	}
}

<메인>
import java.util.Scanner;

public class TestMain {
	public static void main(String[] args) {
		Scanner scanner = null;
		while(true) {
			scanner = new Scanner(System.in);
			
			System.out.println("국어 영어 수학을 입력하세요!");
			int kor = scanner.nextInt();
			int eng = scanner.nextInt();
			int math = scanner.nextInt();
			
			Test grade = new Test(kor, eng, math);
			grade.avg();
			System.out.println("평균은 " + grade.avg());
			System.out.println("계속 하시겠습니까?");
			
			char ch = scanner.next().charAt(0);
			if(ch == 'Y' || ch == 'y') {
				continue;
			} else {
				break;
			}			
		}
		scanner.close();
		System.out.println("프로그램 종료입니다.");
				
	}
}

<출력>
국어 영어 수학을 입력하세요!
100 60 70
평균은 76.66666666666667
계속 하시겠습니까?
y
국어 영어 수학을 입력하세요!
90 80 70
평균은 80.0
계속 하시겠습니까?
n
프로그램 종료입니다.


6. 아래의 프로그램을 작성하시오.
 - 화폐 매수 구하기
 - 반드시 클래스로 작성할것 
출력
---------------------------------
136000
오만원 : 2장
만원 : 3장
오천원 : 1장
천원 : 1장
오백원 : 0개
백원 : 0개
계속 하시겠습니까
y
1456000
오만원 : 29장
만원 : 0장
오천원 : 1장
천원 : 1장
오백원 : 0개
백원 : 0개
계속 하시겠습니까

<.클래스>
public class Test {
	int money;
	int m500, m100, m50, m10, m5, m1;	// 매수
	int temp;  // 나머지값
	
	public Test(int money) {
		this.money = money;
	}
	
	public void temp() {
		m500 = money/50000;
		temp = money - (m500*50000);
		
		m100 = temp/10000;
		temp = temp - (m100 *10000);
		
		m50 = temp/5000;
		temp = temp - (m50 *5000);
		
		m10 = temp/1000;
		temp = temp - (m10*1000);
		
		m5 = temp/500;
		temp = temp - (m5 *500);
		
		m1 = temp/100;
		
		
		System.out.println(" 오만원: " + m500 + "장");
		System.out.println("   만원: " + m100 + "장");
		System.out.println(" 오천원: " + m50 + "장");
		System.out.println("   천원: " + m10 + "장");
		System.out.println(" 오백원: " + m5 + "개");
		System.out.println("   백원: " + m1 + "개");
	}
}
<메인>
import java.util.Scanner;

public class MoneyMain {

	public static void main(String[] args) {
		// 화폐 매수 구하는 프로그램 만들기
		Scanner scanner = null;
		while(true) {
			scanner = new Scanner(System.in);
			System.out.println("금액을 입력하세요.");
			int money = scanner.nextInt();
			
			Money result = new Money(money);
			result.temp();
			
			System.out.println("계속 하시겠습니까");
			char ch = scanner.next().charAt(0);
			if (ch == 'Y' || ch == 'y')
				continue;
			else
				break;
		}
		scanner.close();
	}

}
<출력>
136000
오만원 : 2장
  만원 : 3장
오천원 : 1장
  천원 : 1장
오백원 : 0개
  백원 : 0개
계속 하시겠습니까
y
1456000
오만원 : 29장
  만원 : 0장
오천원 : 1장
  천원 : 1장
오백원 : 0개
  백원 : 0개
계속 하시겠습니까


7.자바의 명명 규칙에 대하여 설명하시오.
1) 클래스
- 클래스명의 첫 문자는 대문자로 시작한다.
- 둘 이상의 단어가 합성될 때 합성어의 첫 단어는 대문자
- Camel Case 모델 : 합성어 모양이 낙타 등 같다고.. 두개의 혹...
ex: StarPrint

2) 메소드와 변수
- 메소드 및 변수명의 첫 문자는 소문자로 시작한다.
- 둘 이상의 단어가 합성될 때 합성된 뒷글자의 첫 단어는 대문자 
ex: addYourMoney

3) 상수 (final 붙은거)
- 상수명은 모두 대문자
- 합성할 땐 언더바 사용 (언더바= 스네이크 모델)
ex: THIS_IS_SANGSU


★ 그 외 정리
- 문자열을 받는 데이터 타입 = String

- 이클립스 자동정렬 단축키
ctrl + shift + f

- 왼쪽 방에서 오른쪽 1000번지 보내는 그림에서
왼쪽 방에 있는건 1000번지 주소일뿐!! 어떠한 것도 아님 ㅇㅇ
그래서 ref2 =ref1;할 때 ref2 방 안에는 ref1방안에 있는 같은 주소가 들어감.
= 즉, 같은 주소를 가지고 있어서 오른쪽 집을 같은 곳을 가리킴


