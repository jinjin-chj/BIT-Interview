#18~19 // 오늘 집중을 잘 못해서 개념 문제는 잘 모르겠어요. 플밍은 다 함..

1.throws 에 대하여 설명하시오.
- 예외 처리의 또 다른 방법
- 함수 + throws+ Exception { } // 하면 받은 함수가 예외 처리 함..
- JVM이 처리한다. 


2.아래가 컴파일 에러가 나는 이유에 대하여 설명하시오.
try {
        	int num = 6 / 0;
        	
        	
		} catch (Exception e) {
			e.printStackTrace();
		} catch (InputMismatchException e) {
			e.printStackTrace();
		}
    
<이유>

    
3.try with resource 에 대하여 설명하시오. 
※ 모르겠어요
- try()안에 객체 직접 생성하고, writer.close(); 따로 안 적음.
try(~~~~) {
}
catch() {
}


7.equals 함수에 대하여 설명하시오.
※ 모르겠어요


5. 과일, 사과, 배, 포도를 표현한 클래스를 만들고 이들 간의 관계를 고려하여 
하나의 클래스를 추상 클래스로 만들어 메소드 print()를 구현하고 
다음과 같은 소스와 결과가 나오도록 클래스를 작성하시오.

- 소스

Fruit fAry[] = {new Grape(), new Apple(), new Pear());

for(Fruit f : fAry)

f.print();

-  결과
나는 포도이다.
나는 사과이다.
나는 배이다.


<클래스 + 메인>	
// 자식 클래스에서 스트링 변수 선언도 해봤는데 굳이 안해도 될듯.. 바로 구현에 과일 이름 넣음.
package java_12_16;

abstract class Fruit {
	protected abstract void print();
}

class Grape extends Fruit {
	@Override
	protected void print() {
		System.out.println("나는 포도이다.");
	}
}

class Apple extends Fruit {
	@Override
	protected void print() {
		System.out.println("나는 사과이다.");
	}
}

class Pear extends Fruit {
	@Override
	protected void print() {
		System.out.println("나는 배이다.");
	}
}

public class FruitMain {

	public static void main(String[] args) {
		Fruit fAry[] = { new Grape(), new Apple(), new Pear() };

		for (Fruit f : fAry)

			f.print();

	}
}



6. 다음 조건을 만족하도록 클래스 Person과 Student를 작성하시오. // 결괏값 소숫점이 또 이상함....
- 클래스 Person
* 필드 : 이름, 나이, 주소 선언

- 클래스 Student
* 필드 : 학교명, 학과, 학번, 8개 평균평점을 저장할 배열로 선언
* 생성자 : 학교명, 학과, 학번 지정
* 메소드 average() : 8개 학기 평균평점의 평균을 반환

- 클레스 Person과 Student 프로그램 테스트 프로그램의 결과 :
  8개 학기의 평균평점은 표준입력으로 받도록한다.

이름 : 김다정
나이 : 20

주소 : 서울시 관악구
학교 : 동양서울대학교
학과 : 전산정보학과
학번 : 20132222

----------------------------------------

8학기 학점을 순서대로 입력하세요

1학기 학점  → 3.37
2학기 학점  → 3.89
3학기 학점  → 4.35
4학기 학점  → 3.76
5학기 학점  → 3.89
6학기 학점  → 4.26
7학기 학점  → 4.89
8학기 학점  → 3.89 

----------------------------------------

8학기 총 평균 평점은 4.0375점입니다.


<클래스>
package java_12_16;

import java.util.Scanner;

public class Person {
	String name;
	int age;
	String address;

	public Person(String name, int age, String address) {
		this.name = name;
		this.age = age;
		this.address = address;
	}
}

class Student extends Person {
	String univ;
	String major;
	int id;
	double[] score; // 학번 길까봐 더블로 잡음

	public Student(String name, int age, String address, String univ, String major, int id) {

		super(name, age, address);
		this.univ = univ;
		this.major = major;
		this.id = id;
		score = new double[8]; // 8개 학기
	}

	public double average() {

		double sum = 0;
		for (double i = 0; i < score.length; i++) {
			sum += i;
		}
		return sum / score.length;
	}

	public void print() {
		Scanner sc = new Scanner(System.in);
		System.out.println("이름 : " + name);
		System.out.println("나이 : " + age);
		System.out.println();
		System.out.println("주소 : " + address);
		System.out.println("학교 : " + univ);
		System.out.println("학과 : " + major);
		System.out.println("학번 : " + id);

		System.out.println('\n' + "----------------------------------------" + '\n');
		System.out.println("8학기 학점을 순서대로 입력하세요.");
		System.out.println();
		for (int i = 0; i < score.length; i++) {
			// 왜 double아니고 i를 int로 바꿔야 하는지? 안바꾸면 밑에서 에러남.
			System.out.print((i + 1) + "학기 학점 → ");
			score[i] = sc.nextDouble();
		}
		System.out.println('\n' + "----------------------------------------" + '\n');
		System.out.println("8학기 총 평균 평점은 "+ average() + "점 입니다.");
		
		sc.close();
	} 
}


<메인>
package java_12_16;

public class PersonMain {

	public static void main(String[] args) {
		Student student = new Student("김다정", 20, "서울시 관악구", "동양서울대학교", "전산정보학과", 20132222);
		student.print();
	
	}
}

<결과>	// 결괏값 소숫점이 또 이상함....
이름 : 김다정
나이 : 20

주소 : 서울시 관악구
학교 : 동양서울대학교
학과 : 전산정보학과
학번 : 20132222

----------------------------------------

8학기 학점을 순서대로 입력하세요.

1학기 학점 → 3.37
2학기 학점 → 3.89
3학기 학점 → 4.35
4학기 학점 → 3.76
5학기 학점 → 3.89
6학기 학점 → 4.26
7학기 학점 → 4.89
8학기 학점 → 3.89

----------------------------------------

8학기 총 평균 평점은 3.5점 입니다.


[7~8] 다음은 도형의 구성을 묘사하는 인터페이스이다.	// 타원 넓이 소숫점이 다름..

interface Shape {
   final double PI = 3.14;  // 상수
   void draw();             // 도형을 그리는 추상 메소드
   double getArea();        // 도형의 면적을 리턴하는 추상 메소드
   default public void redraw() {   // 디폴트 메소드
      System.out.print("--- 다시 그립니다.");
      draw();
   }
}

7. 다음 main() 메소드와 실행 결과를 참고하여, 인터페이스 Shape을 구현한 클래스 Circle를 작성하고 
전체 프로그램을 완성하라.

public static void main(String[] args) {
   Shape donut = new Circle(10); // 반지름이 10인 원 객체
   donut.redraw();
   System.out.println("면적은 "+ donut.getArea());
}


8. 다음 main() 메소드와 실행 결과를 참고하여, 
문제 7의 Shape 인터페이스를 구현한 클래스 Oval, Rect를 추가 작성하고 전체 프로그램을 완성하라.

public static void main(String[] args) {
   Shape[] list = new Shape[3];    // Shape을 상속받은 클래스 객체의 레퍼런스 배열
   list[0] = new Circle(10);       // 반지름이 10인 원 객체
   list[1] = new Oval(20, 30);     // 20x30 사각형에 내접하는 타원
   list[2] = new Rect(10, 40);     // 10x40 크기의 사각형
   for(int i=0; i<list.length; i++) 
   	list[i].redraw();
   for(int i=0; i<list.length; i++) 
   	System.out.println("면적은 "+ list[i].getArea());
}

<결과>
--- 다시 그립니다.반지름이 10인 원입니다.
--- 다시 그립니다.20x30에 내접하는 타원입니다.
--- 다시 그립니다.10x40크기의 사각형 입니다.
면적은 314.0
면적은 1884.0000000000002
면적은 400.0


<클래스>
package java_12_16;

interface Shape {
	final double PI = 3.14; // 상수

	void draw(); // 도형을 그리는 추상 메소드

	double getArea(); // 도형의 면적을 리턴하는 추상 메소드

	default public void redraw() { // 디폴트 메소드
		System.out.print("--- 다시 그립니다. ");
		draw();
	}
}

class Circle implements Shape {
	int rad = 0;

	public Circle(int rad) {
		this.rad = rad;
	}

	@Override
	public void draw() {
		System.out.println("반지름이 " + rad + "인 원입니다.");
	}

	@Override
	public double getArea() {

		return rad * rad * PI;
	}

}

class Oval implements Shape {
	int width, height = 0;

	public Oval(int width, int height) {
		this.width = width;
		this.height = height;
	}

	@Override
	public void draw() {
		System.out.println(width + " x " + height + "에 내접하는 타원입니다.");

	}

	@Override
	public double getArea() {
		return width * height * Math.PI;
	}

}

class Rect implements Shape {
	int width, height = 0;

	public Rect(int width, int height) {
		this.width = width;
		this.height = height;
	}

	@Override
	public void draw() {
		System.out.println(width + " x " + height + "크기의 사각형입니다.");
	}

	@Override
	public double getArea() {
		return width * height;
	}

}

<메인>
package java_12_16;

public class ShapeMain {

	public static void main(String[] args) {
		Shape[] list = new Shape[3]; // Shape을 상속받은 클래스 객체의 레퍼런스 배열
		list[0] = new Circle(10); // 반지름이 10인 원 객체
		list[1] = new Oval(20, 30); // 20x30 사각형에 내접하는 타원
		list[2] = new Rect(10, 40); // 10x40 크기의 사각형
		for (int i = 0; i < list.length; i++)
			list[i].redraw();
		for (int i = 0; i < list.length; i++)
			System.out.println("면적은 " + list[i].getArea());

	}

}

<결과>	// 타원 넓이 소숫점이 다름..
--- 다시 그립니다. 반지름이 10인 원입니다.
--- 다시 그립니다. 20 x 30에 내접하는 타원입니다.
--- 다시 그립니다. 10 x 40크기의 사각형입니다.
면적은 314.0
면적은 1884.9555921538758
면적은 400.0


